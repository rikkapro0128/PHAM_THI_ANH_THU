

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 25 14:49:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0008                     _PORTD	set	8
   207  000E                     _TMR1L	set	14
   208  000F                     _TMR1H	set	15
   209  0031                     _RB1	set	49
   210  0030                     _RB0	set	48
   211  0080                     _TMR1ON	set	128
   212  0084                     _T1CKPS0	set	132
   213  0085                     _T1CKPS1	set	133
   214  005E                     _PEIE	set	94
   215  005F                     _GIE	set	95
   216  0081                     _TMR1CS	set	129
   217  0060                     _TMR1IF	set	96
   218  0095                     _WPUB	set	149
   219  0086                     _TRISB	set	134
   220  0088                     _TRISD	set	136
   221  040F                     _nRBPU	set	1039
   222  0460                     _TMR1IE	set	1120
   223  0189                     _ANSELH	set	393
   224  0188                     _ANSEL	set	392
   225                           
   226                           	psect	cinit
   227  07FC                     start_initialization:	
   228                           ; #config settings
   229                           
   230  07FC                     __initialization:
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2E82   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:
   240  0070                     ?_delay100us:
   241  0070                     ?_DEMLEN60:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_DEMXUONG00:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?___lwdiv:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?___lwmod:	
   254                           ; 2 bytes @ 0x0
   255                           
   256  0070                     delay100us@n:	
   257                           ; 2 bytes @ 0x0
   258                           
   259  0070                     ___lwdiv@divisor:	
   260                           ; 2 bytes @ 0x0
   261                           
   262  0070                     ___lwmod@divisor:	
   263                           ; 2 bytes @ 0x0
   264                           
   265                           
   266                           ; 2 bytes @ 0x0
   267  0070                     	ds	2
   268  0072                     ??_delay100us:
   269  0072                     ___lwdiv@dividend:	
   270                           ; 1 bytes @ 0x2
   271                           
   272  0072                     ___lwmod@dividend:	
   273                           ; 2 bytes @ 0x2
   274                           
   275                           
   276                           ; 2 bytes @ 0x2
   277  0072                     	ds	2
   278  0074                     ??___lwdiv:
   279  0074                     ??___lwmod:	
   280                           ; 1 bytes @ 0x4
   281                           
   282                           
   283                           ; 1 bytes @ 0x4
   284  0074                     	ds	1
   285  0075                     ___lwmod@counter:
   286  0075                     ___lwdiv@quotient:	
   287                           ; 1 bytes @ 0x5
   288                           
   289                           
   290                           ; 2 bytes @ 0x5
   291  0075                     	ds	2
   292  0077                     ___lwdiv@counter:
   293                           
   294                           ; 1 bytes @ 0x7
   295  0077                     	ds	1
   296  0078                     ??_DEMLEN60:
   297  0078                     ??_DEMXUONG00:	
   298                           ; 1 bytes @ 0x8
   299                           
   300                           
   301                           ; 1 bytes @ 0x8
   302  0078                     	ds	2
   303  007A                     ??_main:
   304                           
   305                           	psect	cstackBANK0
   306  0020                     __pcstackBANK0:	
   307                           ; 1 bytes @ 0xA
   308                           
   309  0020                     DEMLEN60@num:
   310  0020                     DEMXUONG00@temp:	
   311                           ; 2 bytes @ 0x0
   312                           
   313                           
   314                           ; 2 bytes @ 0x0
   315  0020                     	ds	2
   316  0022                     DEMLEN60@temp:
   317  0022                     DEMXUONG00@CH:	
   318                           ; 2 bytes @ 0x2
   319                           
   320                           
   321                           ; 2 bytes @ 0x2
   322  0022                     	ds	2
   323  0024                     DEMLEN60@CH:
   324  0024                     DEMXUONG00@DV:	
   325                           ; 2 bytes @ 0x4
   326                           
   327                           
   328                           ; 2 bytes @ 0x4
   329  0024                     	ds	2
   330  0026                     DEMLEN60@DV:
   331  0026                     DEMXUONG00@num:	
   332                           ; 2 bytes @ 0x6
   333                           
   334                           
   335                           ; 2 bytes @ 0x6
   336  0026                     	ds	2
   337  0028                     DEMLEN60@up:
   338                           
   339                           ; 2 bytes @ 0x8
   340  0028                     	ds	2
   341                           
   342                           	psect	maintext
   343  0682                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 57 in file "BAI_3.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : B00/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels required when called: 2
   369 ;; This function calls:
   370 ;;		_DEMLEN60
   371 ;;		_DEMXUONG00
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           
   378                           ;psect for function _main
   379  0682                     _main:
   380  0682                     l884:	
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   383                           
   384                           
   385                           ;BAI_3.c: 58:     ANSEL = ANSELH = 0;
   386  0682  1683               	bsf	3,5	;RP0=1, select bank3
   387  0683  1703               	bsf	3,6	;RP1=1, select bank3
   388  0684  0189               	clrf	9	;volatile
   389  0685  0188               	clrf	8	;volatile
   390                           
   391                           ;BAI_3.c: 59:     TRISD = 0;
   392  0686  1683               	bsf	3,5	;RP0=1, select bank1
   393  0687  1303               	bcf	3,6	;RP1=0, select bank1
   394  0688  0188               	clrf	8	;volatile
   395  0689                     l886:
   396                           
   397                           ;BAI_3.c: 60:     PORTD = 0Xff;
   398  0689  30FF               	movlw	255
   399  068A  1283               	bcf	3,5	;RP0=0, select bank0
   400  068B  1303               	bcf	3,6	;RP1=0, select bank0
   401  068C  0088               	movwf	8	;volatile
   402  068D                     l888:
   403                           
   404                           ;BAI_3.c: 61:     TRISB = WPUB = 0x03;
   405  068D  3003               	movlw	3
   406  068E  1683               	bsf	3,5	;RP0=1, select bank1
   407  068F  1303               	bcf	3,6	;RP1=0, select bank1
   408  0690  0095               	movwf	21	;volatile
   409  0691  0086               	movwf	6	;volatile
   410  0692                     l890:
   411                           
   412                           ;BAI_3.c: 62:     nRBPU = 0;
   413  0692  1381               	bcf	1,7	;volatile
   414  0693                     l892:
   415                           
   416                           ;BAI_3.c: 64:         if(!RB0) {
   417  0693  1283               	bcf	3,5	;RP0=0, select bank0
   418  0694  1303               	bcf	3,6	;RP1=0, select bank0
   419  0695  1806               	btfsc	6,0	;volatile
   420  0696  2E98               	goto	u391
   421  0697  2E99               	goto	u390
   422  0698                     u391:
   423  0698  2EA3               	goto	l63
   424  0699                     u390:
   425  0699                     l64:
   426  0699  1C06               	btfss	6,0	;volatile
   427  069A  2E9C               	goto	u401
   428  069B  2E9D               	goto	u400
   429  069C                     u401:
   430  069C  2E99               	goto	l64
   431  069D                     u400:
   432  069D                     l896:
   433                           
   434                           ;BAI_3.c: 66:             DEMLEN60();
   435  069D  120A  118A  2793  120A  118A  	fcall	_DEMLEN60
   436                           
   437                           ;BAI_3.c: 67:         } else if(!RB1) {
   438  06A2  2E93               	goto	l892
   439  06A3                     l63:
   440  06A3  1886               	btfsc	6,1	;volatile
   441  06A4  2EA6               	goto	u411
   442  06A5  2EA7               	goto	u410
   443  06A6                     u411:
   444  06A6  2E93               	goto	l892
   445  06A7                     u410:
   446  06A7                     l69:
   447  06A7  1C86               	btfss	6,1	;volatile
   448  06A8  2EAA               	goto	u421
   449  06A9  2EAB               	goto	u420
   450  06AA                     u421:
   451  06AA  2EA7               	goto	l69
   452  06AB                     u420:
   453  06AB                     l900:
   454                           
   455                           ;BAI_3.c: 69:             DEMXUONG00();
   456  06AB  120A  118A  2732  120A  118A  	fcall	_DEMXUONG00
   457  06B0  2E93               	goto	l892
   458  06B1  120A  118A  2800   	ljmp	start
   459  06B4                     __end_of_main:
   460                           
   461                           	psect	text1
   462  0732                     __ptext1:	
   463 ;; *************** function _DEMXUONG00 *****************
   464 ;; Defined at:
   465 ;;		line 45 in file "BAI_3.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  num             2    6[BANK0 ] unsigned int 
   470 ;;  DV              2    4[BANK0 ] unsigned int 
   471 ;;  CH              2    2[BANK0 ] unsigned int 
   472 ;;  temp            2    0[BANK0 ] unsigned int 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0, pclath, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       8       0       0       0
   484 ;;      Temps:          2       0       0       0       0
   485 ;;      Totals:         2       8       0       0       0
   486 ;;Total ram usage:       10 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 1
   489 ;; This function calls:
   490 ;;		___lwdiv
   491 ;;		___lwmod
   492 ;;		_delay100us
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           
   499                           ;psect for function _DEMXUONG00
   500  0732                     _DEMXUONG00:
   501  0732                     l866:	
   502                           ;incstack = 0
   503                           ; Regs used in _DEMXUONG00: [wreg+status,2+status,0+pclath+cstack]
   504                           
   505  0732  1283               	bcf	3,5	;RP0=0, select bank0
   506  0733  1303               	bcf	3,6	;RP1=0, select bank0
   507  0734  01A2               	clrf	DEMXUONG00@CH
   508  0735  01A3               	clrf	DEMXUONG00@CH+1
   509  0736  01A4               	clrf	DEMXUONG00@DV
   510  0737  01A5               	clrf	DEMXUONG00@DV+1
   511  0738                     l868:
   512  0738  303D               	movlw	61
   513  0739  00A6               	movwf	DEMXUONG00@num
   514  073A  3000               	movlw	0
   515  073B  00A7               	movwf	DEMXUONG00@num+1
   516  073C                     l870:
   517                           
   518                           ;BAI_3.c: 48:         CH = num / 10;
   519  073C  300A               	movlw	10
   520  073D  00F0               	movwf	___lwdiv@divisor
   521  073E  3000               	movlw	0
   522  073F  00F1               	movwf	___lwdiv@divisor+1
   523  0740  0827               	movf	DEMXUONG00@num+1,w
   524  0741  00F3               	movwf	___lwdiv@dividend+1
   525  0742  0826               	movf	DEMXUONG00@num,w
   526  0743  00F2               	movwf	___lwdiv@dividend
   527  0744  120A  118A  26EE  120A  118A  	fcall	___lwdiv
   528  0749  0871               	movf	?___lwdiv+1,w
   529  074A  1283               	bcf	3,5	;RP0=0, select bank0
   530  074B  1303               	bcf	3,6	;RP1=0, select bank0
   531  074C  00A3               	movwf	DEMXUONG00@CH+1
   532  074D  0870               	movf	?___lwdiv,w
   533  074E  00A2               	movwf	DEMXUONG00@CH
   534  074F                     l872:
   535                           
   536                           ;BAI_3.c: 49:         DV = num % 10;
   537  074F  300A               	movlw	10
   538  0750  00F0               	movwf	___lwmod@divisor
   539  0751  3000               	movlw	0
   540  0752  00F1               	movwf	___lwmod@divisor+1
   541  0753  0827               	movf	DEMXUONG00@num+1,w
   542  0754  00F3               	movwf	___lwmod@dividend+1
   543  0755  0826               	movf	DEMXUONG00@num,w
   544  0756  00F2               	movwf	___lwmod@dividend
   545  0757  120A  118A  26B4  120A  118A  	fcall	___lwmod
   546  075C  0871               	movf	?___lwmod+1,w
   547  075D  1283               	bcf	3,5	;RP0=0, select bank0
   548  075E  1303               	bcf	3,6	;RP1=0, select bank0
   549  075F  00A5               	movwf	DEMXUONG00@DV+1
   550  0760  0870               	movf	?___lwmod,w
   551  0761  00A4               	movwf	DEMXUONG00@DV
   552  0762                     l874:
   553                           
   554                           ;BAI_3.c: 50:         temp = (CH << 4) | DV;
   555  0762  0823               	movf	DEMXUONG00@CH+1,w
   556  0763  00F9               	movwf	??_DEMXUONG00+1
   557  0764  0822               	movf	DEMXUONG00@CH,w
   558  0765  00F8               	movwf	??_DEMXUONG00
   559  0766  0EF8               	swapf	??_DEMXUONG00,f
   560  0767  0EF9               	swapf	??_DEMXUONG00+1,f
   561  0768  30F0               	movlw	240
   562  0769  05F9               	andwf	??_DEMXUONG00+1,f
   563  076A  0878               	movf	??_DEMXUONG00,w
   564  076B  390F               	andlw	15
   565  076C  04F9               	iorwf	??_DEMXUONG00+1,f
   566  076D  30F0               	movlw	240
   567  076E  05F8               	andwf	??_DEMXUONG00,f
   568  076F  0824               	movf	DEMXUONG00@DV,w
   569  0770  0478               	iorwf	??_DEMXUONG00,w
   570  0771  00A0               	movwf	DEMXUONG00@temp
   571  0772  0825               	movf	DEMXUONG00@DV+1,w
   572  0773  0479               	iorwf	??_DEMXUONG00+1,w
   573  0774  00A1               	movwf	DEMXUONG00@temp+1
   574  0775                     l876:
   575                           
   576                           ;BAI_3.c: 51:         PORTD = temp;
   577  0775  0820               	movf	DEMXUONG00@temp,w
   578  0776  0088               	movwf	8	;volatile
   579  0777                     l878:
   580                           
   581                           ;BAI_3.c: 52:         delay100us(5000);
   582  0777  3088               	movlw	136
   583  0778  00F0               	movwf	delay100us@n
   584  0779  3013               	movlw	19
   585  077A  00F1               	movwf	delay100us@n+1
   586  077B  120A  118A  265C  120A  118A  	fcall	_delay100us
   587  0780                     l880:
   588                           
   589                           ;BAI_3.c: 53:     }while(num--);
   590  0780  3001               	movlw	1
   591  0781  1283               	bcf	3,5	;RP0=0, select bank0
   592  0782  1303               	bcf	3,6	;RP1=0, select bank0
   593  0783  02A6               	subwf	DEMXUONG00@num,f
   594  0784  3000               	movlw	0
   595  0785  1C03               	skipc
   596  0786  03A7               	decf	DEMXUONG00@num+1,f
   597  0787  02A7               	subwf	DEMXUONG00@num+1,f
   598  0788  0A26               	incf	DEMXUONG00@num,w
   599  0789  1D03               	skipz
   600  078A  2F8F               	goto	u381
   601  078B  0A27               	incf	DEMXUONG00@num+1,w
   602  078C  1D03               	btfss	3,2
   603  078D  2F8F               	goto	u381
   604  078E  2F90               	goto	u380
   605  078F                     u381:
   606  078F  2F3C               	goto	l870
   607  0790                     u380:
   608  0790                     l882:
   609                           
   610                           ;BAI_3.c: 54:     PORTD = 0xff;
   611  0790  30FF               	movlw	255
   612  0791  0088               	movwf	8	;volatile
   613  0792                     l57:
   614  0792  0008               	return
   615  0793                     __end_of_DEMXUONG00:
   616                           
   617                           	psect	text2
   618  0793                     __ptext2:	
   619 ;; *************** function _DEMLEN60 *****************
   620 ;; Defined at:
   621 ;;		line 32 in file "BAI_3.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  up              2    8[BANK0 ] unsigned int 
   626 ;;  DV              2    6[BANK0 ] unsigned int 
   627 ;;  CH              2    4[BANK0 ] unsigned int 
   628 ;;  temp            2    2[BANK0 ] unsigned int 
   629 ;;  num             2    0[BANK0 ] unsigned int 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0, pclath, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       0       0       0       0
   640 ;;      Locals:         0      10       0       0       0
   641 ;;      Temps:          2       0       0       0       0
   642 ;;      Totals:         2      10       0       0       0
   643 ;;Total ram usage:       12 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; Hardware stack levels required when called: 1
   646 ;; This function calls:
   647 ;;		___lwdiv
   648 ;;		___lwmod
   649 ;;		_delay100us
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _DEMLEN60
   657  0793                     _DEMLEN60:
   658  0793                     l850:	
   659                           ;incstack = 0
   660                           ; Regs used in _DEMLEN60: [wreg+status,2+status,0+pclath+cstack]
   661                           
   662  0793  1283               	bcf	3,5	;RP0=0, select bank0
   663  0794  1303               	bcf	3,6	;RP1=0, select bank0
   664  0795  01A4               	clrf	DEMLEN60@CH
   665  0796  01A5               	clrf	DEMLEN60@CH+1
   666  0797  01A6               	clrf	DEMLEN60@DV
   667  0798  01A7               	clrf	DEMLEN60@DV+1
   668  0799                     l852:
   669  0799  303C               	movlw	60
   670  079A  00A0               	movwf	DEMLEN60@num
   671  079B  3000               	movlw	0
   672  079C  00A1               	movwf	DEMLEN60@num+1
   673  079D                     l854:
   674  079D  01A8               	clrf	DEMLEN60@up
   675  079E  01A9               	clrf	DEMLEN60@up+1
   676  079F                     l856:
   677                           
   678                           ;BAI_3.c: 35:         CH = up / 10;
   679  079F  300A               	movlw	10
   680  07A0  00F0               	movwf	___lwdiv@divisor
   681  07A1  3000               	movlw	0
   682  07A2  00F1               	movwf	___lwdiv@divisor+1
   683  07A3  0829               	movf	DEMLEN60@up+1,w
   684  07A4  00F3               	movwf	___lwdiv@dividend+1
   685  07A5  0828               	movf	DEMLEN60@up,w
   686  07A6  00F2               	movwf	___lwdiv@dividend
   687  07A7  120A  118A  26EE  120A  118A  	fcall	___lwdiv
   688  07AC  0871               	movf	?___lwdiv+1,w
   689  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   690  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   691  07AF  00A5               	movwf	DEMLEN60@CH+1
   692  07B0  0870               	movf	?___lwdiv,w
   693  07B1  00A4               	movwf	DEMLEN60@CH
   694  07B2                     l858:
   695                           
   696                           ;BAI_3.c: 36:         DV = up % 10;
   697  07B2  300A               	movlw	10
   698  07B3  00F0               	movwf	___lwmod@divisor
   699  07B4  3000               	movlw	0
   700  07B5  00F1               	movwf	___lwmod@divisor+1
   701  07B6  0829               	movf	DEMLEN60@up+1,w
   702  07B7  00F3               	movwf	___lwmod@dividend+1
   703  07B8  0828               	movf	DEMLEN60@up,w
   704  07B9  00F2               	movwf	___lwmod@dividend
   705  07BA  120A  118A  26B4  120A  118A  	fcall	___lwmod
   706  07BF  0871               	movf	?___lwmod+1,w
   707  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   708  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   709  07C2  00A7               	movwf	DEMLEN60@DV+1
   710  07C3  0870               	movf	?___lwmod,w
   711  07C4  00A6               	movwf	DEMLEN60@DV
   712                           
   713                           ;BAI_3.c: 37:         temp = (CH << 4) | DV;
   714  07C5  0825               	movf	DEMLEN60@CH+1,w
   715  07C6  00F9               	movwf	??_DEMLEN60+1
   716  07C7  0824               	movf	DEMLEN60@CH,w
   717  07C8  00F8               	movwf	??_DEMLEN60
   718  07C9  0EF8               	swapf	??_DEMLEN60,f
   719  07CA  0EF9               	swapf	??_DEMLEN60+1,f
   720  07CB  30F0               	movlw	240
   721  07CC  05F9               	andwf	??_DEMLEN60+1,f
   722  07CD  0878               	movf	??_DEMLEN60,w
   723  07CE  390F               	andlw	15
   724  07CF  04F9               	iorwf	??_DEMLEN60+1,f
   725  07D0  30F0               	movlw	240
   726  07D1  05F8               	andwf	??_DEMLEN60,f
   727  07D2  0826               	movf	DEMLEN60@DV,w
   728  07D3  0478               	iorwf	??_DEMLEN60,w
   729  07D4  00A2               	movwf	DEMLEN60@temp
   730  07D5  0827               	movf	DEMLEN60@DV+1,w
   731  07D6  0479               	iorwf	??_DEMLEN60+1,w
   732  07D7  00A3               	movwf	DEMLEN60@temp+1
   733                           
   734                           ;BAI_3.c: 38:         PORTD = temp;
   735  07D8  0822               	movf	DEMLEN60@temp,w
   736  07D9  0088               	movwf	8	;volatile
   737                           
   738                           ;BAI_3.c: 39:         up++;
   739  07DA  3001               	movlw	1
   740  07DB  07A8               	addwf	DEMLEN60@up,f
   741  07DC  1803               	skipnc
   742  07DD  0AA9               	incf	DEMLEN60@up+1,f
   743  07DE  3000               	movlw	0
   744  07DF  07A9               	addwf	DEMLEN60@up+1,f
   745  07E0                     l860:
   746                           
   747                           ;BAI_3.c: 40:         delay100us(3000);
   748  07E0  30B8               	movlw	184
   749  07E1  00F0               	movwf	delay100us@n
   750  07E2  300B               	movlw	11
   751  07E3  00F1               	movwf	delay100us@n+1
   752  07E4  120A  118A  265C  120A  118A  	fcall	_delay100us
   753  07E9                     l862:
   754                           
   755                           ;BAI_3.c: 41:     }while(num--);
   756  07E9  3001               	movlw	1
   757  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   758  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   759  07EC  02A0               	subwf	DEMLEN60@num,f
   760  07ED  3000               	movlw	0
   761  07EE  1C03               	skipc
   762  07EF  03A1               	decf	DEMLEN60@num+1,f
   763  07F0  02A1               	subwf	DEMLEN60@num+1,f
   764  07F1  0A20               	incf	DEMLEN60@num,w
   765  07F2  1D03               	skipz
   766  07F3  2FF8               	goto	u371
   767  07F4  0A21               	incf	DEMLEN60@num+1,w
   768  07F5  1D03               	btfss	3,2
   769  07F6  2FF8               	goto	u371
   770  07F7  2FF9               	goto	u370
   771  07F8                     u371:
   772  07F8  2F9F               	goto	l856
   773  07F9                     u370:
   774  07F9                     l864:
   775                           
   776                           ;BAI_3.c: 42:     PORTD = 0xff;
   777  07F9  30FF               	movlw	255
   778  07FA  0088               	movwf	8	;volatile
   779  07FB                     l52:
   780  07FB  0008               	return
   781  07FC                     __end_of_DEMLEN60:
   782                           
   783                           	psect	text3
   784  065C                     __ptext3:	
   785 ;; *************** function _delay100us *****************
   786 ;; Defined at:
   787 ;;		line 19 in file "BAI_3.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  n               2    0[COMMON] unsigned int 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         2       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0
   804 ;;      Totals:         2       0       0       0       0
   805 ;;Total ram usage:        2 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_DEMLEN60
   811 ;;		_DEMXUONG00
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _delay100us
   817  065C                     _delay100us:
   818  065C                     l784:	
   819                           ;incstack = 0
   820                           ; Regs used in _delay100us: [wreg+status,2+status,0]
   821                           
   822                           
   823                           ;BAI_3.c: 20:     while(n--) {
   824  065C  2E73               	goto	l800
   825  065D                     l786:
   826                           
   827                           ;BAI_3.c: 21:         TMR1H = 255;
   828  065D  30FF               	movlw	255
   829  065E  1283               	bcf	3,5	;RP0=0, select bank0
   830  065F  1303               	bcf	3,6	;RP1=0, select bank0
   831  0660  008F               	movwf	15	;volatile
   832                           
   833                           ;BAI_3.c: 22:         TMR1L = 156;
   834  0661  309C               	movlw	156
   835  0662  008E               	movwf	14	;volatile
   836  0663                     l788:
   837                           
   838                           ;BAI_3.c: 23:         TMR1IF = 0;
   839  0663  100C               	bcf	12,0	;volatile
   840  0664                     l790:
   841                           
   842                           ;BAI_3.c: 24:         TMR1CS = 0;
   843  0664  1090               	bcf	16,1	;volatile
   844  0665                     l792:
   845                           
   846                           ;BAI_3.c: 25:         GIE=PEIE =TMR1IE = 0;
   847  0665  1683               	bsf	3,5	;RP0=1, select bank1
   848  0666  1303               	bcf	3,6	;RP1=0, select bank1
   849  0667  100C               	bcf	12,0	;volatile
   850  0668  130B               	bcf	11,6	;volatile
   851  0669  138B               	bcf	11,7	;volatile
   852  066A                     l794:
   853                           
   854                           ;BAI_3.c: 26:         T1CKPS1 = 0; T1CKPS0 = 0;
   855  066A  1283               	bcf	3,5	;RP0=0, select bank0
   856  066B  1303               	bcf	3,6	;RP1=0, select bank0
   857  066C  1290               	bcf	16,5	;volatile
   858  066D                     l796:
   859  066D  1210               	bcf	16,4	;volatile
   860  066E                     l798:
   861                           
   862                           ;BAI_3.c: 27:         TMR1ON = 1;
   863  066E  1410               	bsf	16,0	;volatile
   864  066F                     l43:	
   865                           ;BAI_3.c: 28:         while(TMR1IF==0);
   866                           
   867  066F  1C0C               	btfss	12,0	;volatile
   868  0670  2E72               	goto	u221
   869  0671  2E73               	goto	u220
   870  0672                     u221:
   871  0672  2E6F               	goto	l43
   872  0673                     u220:
   873  0673                     l800:
   874                           
   875                           ;BAI_3.c: 20:     while(n--) {
   876  0673  3001               	movlw	1
   877  0674  02F0               	subwf	delay100us@n,f
   878  0675  3000               	movlw	0
   879  0676  1C03               	skipc
   880  0677  03F1               	decf	delay100us@n+1,f
   881  0678  02F1               	subwf	delay100us@n+1,f
   882  0679  0A70               	incf	delay100us@n,w
   883  067A  1D03               	skipz
   884  067B  2E80               	goto	u231
   885  067C  0A71               	incf	delay100us@n+1,w
   886  067D  1D03               	btfss	3,2
   887  067E  2E80               	goto	u231
   888  067F  2E81               	goto	u230
   889  0680                     u231:
   890  0680  2E5D               	goto	l786
   891  0681                     u230:
   892  0681                     l47:
   893  0681  0008               	return
   894  0682                     __end_of_delay100us:
   895                           
   896                           	psect	text4
   897  06B4                     __ptext4:	
   898 ;; *************** function ___lwmod *****************
   899 ;; Defined at:
   900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  divisor         2    0[COMMON] unsigned int 
   903 ;;  dividend        2    2[COMMON] unsigned int 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  counter         1    5[COMMON] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  2    0[COMMON] unsigned int 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         4       0       0       0       0
   916 ;;      Locals:         1       0       0       0       0
   917 ;;      Temps:          1       0       0       0       0
   918 ;;      Totals:         6       0       0       0       0
   919 ;;Total ram usage:        6 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_DEMLEN60
   925 ;;		_DEMXUONG00
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function ___lwmod
   931  06B4                     ___lwmod:
   932  06B4                     l828:	
   933                           ;incstack = 0
   934                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   935                           
   936  06B4  0870               	movf	___lwmod@divisor,w
   937  06B5  0471               	iorwf	___lwmod@divisor+1,w
   938  06B6  1903               	btfsc	3,2
   939  06B7  2EB9               	goto	u311
   940  06B8  2EBA               	goto	u310
   941  06B9                     u311:
   942  06B9  2EE9               	goto	l846
   943  06BA                     u310:
   944  06BA                     l830:
   945  06BA  01F5               	clrf	___lwmod@counter
   946  06BB  0AF5               	incf	___lwmod@counter,f
   947  06BC  2EC8               	goto	l836
   948  06BD                     l832:
   949  06BD  3001               	movlw	1
   950  06BE                     u325:
   951  06BE  1003               	clrc
   952  06BF  0DF0               	rlf	___lwmod@divisor,f
   953  06C0  0DF1               	rlf	___lwmod@divisor+1,f
   954  06C1  3EFF               	addlw	-1
   955  06C2  1D03               	skipz
   956  06C3  2EBE               	goto	u325
   957  06C4                     l834:
   958  06C4  3001               	movlw	1
   959  06C5  00F4               	movwf	??___lwmod
   960  06C6  0874               	movf	??___lwmod,w
   961  06C7  07F5               	addwf	___lwmod@counter,f
   962  06C8                     l836:
   963  06C8  1FF1               	btfss	___lwmod@divisor+1,7
   964  06C9  2ECB               	goto	u331
   965  06CA  2ECC               	goto	u330
   966  06CB                     u331:
   967  06CB  2EBD               	goto	l832
   968  06CC                     u330:
   969  06CC                     l838:
   970  06CC  0871               	movf	___lwmod@divisor+1,w
   971  06CD  0273               	subwf	___lwmod@dividend+1,w
   972  06CE  1D03               	skipz
   973  06CF  2ED2               	goto	u345
   974  06D0  0870               	movf	___lwmod@divisor,w
   975  06D1  0272               	subwf	___lwmod@dividend,w
   976  06D2                     u345:
   977  06D2  1C03               	skipc
   978  06D3  2ED5               	goto	u341
   979  06D4  2ED6               	goto	u340
   980  06D5                     u341:
   981  06D5  2EDC               	goto	l842
   982  06D6                     u340:
   983  06D6                     l840:
   984  06D6  0870               	movf	___lwmod@divisor,w
   985  06D7  02F2               	subwf	___lwmod@dividend,f
   986  06D8  0871               	movf	___lwmod@divisor+1,w
   987  06D9  1C03               	skipc
   988  06DA  03F3               	decf	___lwmod@dividend+1,f
   989  06DB  02F3               	subwf	___lwmod@dividend+1,f
   990  06DC                     l842:
   991  06DC  3001               	movlw	1
   992  06DD                     u355:
   993  06DD  1003               	clrc
   994  06DE  0CF1               	rrf	___lwmod@divisor+1,f
   995  06DF  0CF0               	rrf	___lwmod@divisor,f
   996  06E0  3EFF               	addlw	-1
   997  06E1  1D03               	skipz
   998  06E2  2EDD               	goto	u355
   999  06E3                     l844:
  1000  06E3  3001               	movlw	1
  1001  06E4  02F5               	subwf	___lwmod@counter,f
  1002  06E5  1D03               	btfss	3,2
  1003  06E6  2EE8               	goto	u361
  1004  06E7  2EE9               	goto	u360
  1005  06E8                     u361:
  1006  06E8  2ECC               	goto	l838
  1007  06E9                     u360:
  1008  06E9                     l846:
  1009  06E9  0873               	movf	___lwmod@dividend+1,w
  1010  06EA  00F1               	movwf	?___lwmod+1
  1011  06EB  0872               	movf	___lwmod@dividend,w
  1012  06EC  00F0               	movwf	?___lwmod
  1013  06ED                     l442:
  1014  06ED  0008               	return
  1015  06EE                     __end_of___lwmod:
  1016                           
  1017                           	psect	text5
  1018  06EE                     __ptext5:	
  1019 ;; *************** function ___lwdiv *****************
  1020 ;; Defined at:
  1021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  divisor         2    0[COMMON] unsigned int 
  1024 ;;  dividend        2    2[COMMON] unsigned int 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  quotient        2    5[COMMON] unsigned int 
  1027 ;;  counter         1    7[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  2    0[COMMON] unsigned int 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         4       0       0       0       0
  1038 ;;      Locals:         3       0       0       0       0
  1039 ;;      Temps:          1       0       0       0       0
  1040 ;;      Totals:         8       0       0       0       0
  1041 ;;Total ram usage:        8 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_DEMLEN60
  1047 ;;		_DEMXUONG00
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function ___lwdiv
  1053  06EE                     ___lwdiv:
  1054  06EE                     l802:	
  1055                           ;incstack = 0
  1056                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1057                           
  1058  06EE  01F5               	clrf	___lwdiv@quotient
  1059  06EF  01F6               	clrf	___lwdiv@quotient+1
  1060  06F0                     l804:
  1061  06F0  0870               	movf	___lwdiv@divisor,w
  1062  06F1  0471               	iorwf	___lwdiv@divisor+1,w
  1063  06F2  1903               	btfsc	3,2
  1064  06F3  2EF5               	goto	u241
  1065  06F4  2EF6               	goto	u240
  1066  06F5                     u241:
  1067  06F5  2F2D               	goto	l824
  1068  06F6                     u240:
  1069  06F6                     l806:
  1070  06F6  01F7               	clrf	___lwdiv@counter
  1071  06F7  0AF7               	incf	___lwdiv@counter,f
  1072  06F8  2F04               	goto	l812
  1073  06F9                     l808:
  1074  06F9  3001               	movlw	1
  1075  06FA                     u255:
  1076  06FA  1003               	clrc
  1077  06FB  0DF0               	rlf	___lwdiv@divisor,f
  1078  06FC  0DF1               	rlf	___lwdiv@divisor+1,f
  1079  06FD  3EFF               	addlw	-1
  1080  06FE  1D03               	skipz
  1081  06FF  2EFA               	goto	u255
  1082  0700                     l810:
  1083  0700  3001               	movlw	1
  1084  0701  00F4               	movwf	??___lwdiv
  1085  0702  0874               	movf	??___lwdiv,w
  1086  0703  07F7               	addwf	___lwdiv@counter,f
  1087  0704                     l812:
  1088  0704  1FF1               	btfss	___lwdiv@divisor+1,7
  1089  0705  2F07               	goto	u261
  1090  0706  2F08               	goto	u260
  1091  0707                     u261:
  1092  0707  2EF9               	goto	l808
  1093  0708                     u260:
  1094  0708                     l814:
  1095  0708  3001               	movlw	1
  1096  0709                     u275:
  1097  0709  1003               	clrc
  1098  070A  0DF5               	rlf	___lwdiv@quotient,f
  1099  070B  0DF6               	rlf	___lwdiv@quotient+1,f
  1100  070C  3EFF               	addlw	-1
  1101  070D  1D03               	skipz
  1102  070E  2F09               	goto	u275
  1103  070F  0871               	movf	___lwdiv@divisor+1,w
  1104  0710  0273               	subwf	___lwdiv@dividend+1,w
  1105  0711  1D03               	skipz
  1106  0712  2F15               	goto	u285
  1107  0713  0870               	movf	___lwdiv@divisor,w
  1108  0714  0272               	subwf	___lwdiv@dividend,w
  1109  0715                     u285:
  1110  0715  1C03               	skipc
  1111  0716  2F18               	goto	u281
  1112  0717  2F19               	goto	u280
  1113  0718                     u281:
  1114  0718  2F20               	goto	l820
  1115  0719                     u280:
  1116  0719                     l816:
  1117  0719  0870               	movf	___lwdiv@divisor,w
  1118  071A  02F2               	subwf	___lwdiv@dividend,f
  1119  071B  0871               	movf	___lwdiv@divisor+1,w
  1120  071C  1C03               	skipc
  1121  071D  03F3               	decf	___lwdiv@dividend+1,f
  1122  071E  02F3               	subwf	___lwdiv@dividend+1,f
  1123  071F                     l818:
  1124  071F  1475               	bsf	___lwdiv@quotient,0
  1125  0720                     l820:
  1126  0720  3001               	movlw	1
  1127  0721                     u295:
  1128  0721  1003               	clrc
  1129  0722  0CF1               	rrf	___lwdiv@divisor+1,f
  1130  0723  0CF0               	rrf	___lwdiv@divisor,f
  1131  0724  3EFF               	addlw	-1
  1132  0725  1D03               	skipz
  1133  0726  2F21               	goto	u295
  1134  0727                     l822:
  1135  0727  3001               	movlw	1
  1136  0728  02F7               	subwf	___lwdiv@counter,f
  1137  0729  1D03               	btfss	3,2
  1138  072A  2F2C               	goto	u301
  1139  072B  2F2D               	goto	u300
  1140  072C                     u301:
  1141  072C  2F08               	goto	l814
  1142  072D                     u300:
  1143  072D                     l824:
  1144  072D  0876               	movf	___lwdiv@quotient+1,w
  1145  072E  00F1               	movwf	?___lwdiv+1
  1146  072F  0875               	movf	___lwdiv@quotient,w
  1147  0730  00F0               	movwf	?___lwdiv
  1148  0731                     l432:
  1149  0731  0008               	return
  1150  0732                     __end_of___lwdiv:
  1151  007E                     btemp	set	126	;btemp
  1152  007E                     wtemp0	set	126
  1153                           
  1154                           	psect	config
  1155                           
  1156                           ;Config register CONFIG1 @ 0x2007
  1157                           ;	Oscillator Selection bits
  1158                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1159                           ;	Watchdog Timer Enable bit
  1160                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1161                           ;	Power-up Timer Enable bit
  1162                           ;	PWRTE = OFF, PWRT disabled
  1163                           ;	RE3/MCLR pin function select bit
  1164                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1165                           ;	Code Protection bit
  1166                           ;	CP = OFF, Program memory code protection is disabled
  1167                           ;	Data Code Protection bit
  1168                           ;	CPD = OFF, Data memory code protection is disabled
  1169                           ;	Brown Out Reset Selection bits
  1170                           ;	BOREN = OFF, BOR disabled
  1171                           ;	Internal External Switchover bit
  1172                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1173                           ;	Fail-Safe Clock Monitor Enabled bit
  1174                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1175                           ;	Low Voltage Programming Enable bit
  1176                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1177                           ;	In-Circuit Debugger Mode bit
  1178                           ;	DEBUG = 0x1, unprogrammed default
  1179  2007                     	org	8199
  1180  2007  20F2               	dw	8434
  1181                           
  1182                           ;Config register CONFIG2 @ 0x2008
  1183                           ;	Brown-out Reset Selection bit
  1184                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1185                           ;	Flash Program Memory Self Write Enable bits
  1186                           ;	WRT = OFF, Write protection off
  1187  2008                     	org	8200
  1188  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DEMLEN60
    _main->_DEMXUONG00
    _DEMXUONG00->___lwdiv
    _DEMLEN60->___lwdiv

Critical Paths under _main in BANK0

    _main->_DEMLEN60

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2486
                           _DEMLEN60
                         _DEMXUONG00
 ---------------------------------------------------------------------------------
 (1) _DEMXUONG00                                          10    10      0    1242
                                              8 COMMON     2     2      0
                                              0 BANK0      8     8      0
                            ___lwdiv
                            ___lwmod
                         _delay100us
 ---------------------------------------------------------------------------------
 (1) _DEMLEN60                                            12    12      0    1244
                                              8 COMMON     2     2      0
                                              0 BANK0     10    10      0
                            ___lwdiv
                            ___lwmod
                         _delay100us
 ---------------------------------------------------------------------------------
 (2) _delay100us                                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEMLEN60
     ___lwdiv
     ___lwmod
     _delay100us
   _DEMXUONG00
     ___lwdiv
     ___lwmod
     _delay100us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 25 14:49:43 2021

                     l43 066F                       l52 07FB                       l47 0681  
                     l63 06A3                       l64 0699                       l57 0792  
                     l69 06A7                      l432 0731                      l442 06ED  
                    l800 0673                      l810 0700                      l802 06EE  
                    l820 0720                      l812 0704                      l804 06F0  
                    l900 06AB                      l822 0727                      l814 0708  
                    l806 06F6                      l830 06BA                      l816 0719  
                    l808 06F9                      l824 072D                      l840 06D6  
                    l832 06BD                      l818 071F                      l842 06DC  
                    l834 06C4                      l850 0793                      l844 06E3  
                    l836 06C8                      l828 06B4                      l860 07E0  
                    l852 0799                      l838 06CC                      l846 06E9  
                    l790 0664                      l862 07E9                      l854 079D  
                    l870 073C                      l792 0665                      l784 065C  
                    l864 07F9                      l856 079F                      l880 0780  
                    l872 074F                      l794 066A                      l786 065D  
                    l858 07B2                      l882 0790                      l874 0762  
                    l866 0732                      l890 0692                      l796 066D  
                    l788 0663                      l876 0775                      l868 0738  
                    l892 0693                      l884 0682                      l798 066E  
                    l878 0777                      l886 0689                      l896 069D  
                    l888 068D                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      u300 072D                      u220 0673  
                    u301 072C                      u221 0672                      u310 06BA  
                    u230 0681                      u311 06B9                      u231 0680  
                    u240 06F6                      u400 069D                      u241 06F5  
                    u401 069C                      u330 06CC                      u410 06A7  
                    u331 06CB                      u411 06A6                      u260 0708  
                    u340 06D6                      u420 06AB                      u261 0707  
                    u341 06D5                      u325 06BE                      u421 06AA  
                    u255 06FA                      u280 0719                      u360 06E9  
                    u281 0718                      u361 06E8                      u345 06D2  
                    u370 07F9                      u275 0709                      u355 06DD  
                    u371 07F8                      u380 0790                      u285 0715  
                    u381 078F                      u390 0699                      u295 0721  
                    u391 0698                     _PEIE 005E                     _WPUB 0095  
                   _main 0682      __size_of_DEMXUONG00 0061                     btemp 007E  
       __end_of_DEMLEN60 07FC                     start 0000                    ?_main 0070  
                  _ANSEL 0188          __end_of___lwdiv 0732          __end_of___lwmod 06EE  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _nRBPU 040F  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 06B4                   ??_main 007A                   _ANSELH 0189  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1CS 0081  
                 _TMR1ON 0080                ??___lwdiv 0074                ??___lwmod 0074  
           ??_DEMXUONG00 0078                ?_DEMLEN60 0070  __end_of__initialization 07FC  
     __end_of_DEMXUONG00 0793           __pcstackCOMMON 0070               ??_DEMLEN60 0078  
             _delay100us 065C            DEMXUONG00@num 0026               __pmaintext 0682  
                _T1CKPS0 0084                  _T1CKPS1 0085               DEMLEN60@CH 0024  
             DEMLEN60@DV 0026               DEMLEN60@up 0028                  ___lwdiv 06EE  
                ___lwmod 06B4                  __ptext1 0732                  __ptext2 0793  
                __ptext3 065C                  __ptext4 06B4                  __ptext5 06EE  
            ?_delay100us 0070     end_of_initialization 07FC             DEMLEN60@temp 0022  
      __size_of_DEMLEN60 0069      __size_of_delay100us 0026      start_initialization 07FC  
              ___latbits 0002            __pcstackBANK0 0020             DEMXUONG00@CH 0022  
           DEMXUONG00@DV 0024           DEMXUONG00@temp 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070                 _DEMLEN60 0793  
       ___lwdiv@quotient 0075             ??_delay100us 0072              DEMLEN60@num 0020  
     __end_of_delay100us 0682              delay100us@n 0070         __size_of___lwdiv 0044  
       __size_of___lwmod 003A               _DEMXUONG00 0732          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077            __size_of_main 0032         ___lwmod@dividend 0072  
            ?_DEMXUONG00 0070          ___lwmod@divisor 0070          ___lwmod@counter 0075  
